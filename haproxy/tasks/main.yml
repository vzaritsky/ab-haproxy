---
# Haproxy Installation Role
# vim:ft=ansible:ts=2:et:

- debug: msg="haproxy instance {{ _haproxy.instance_name }}"

- name: Configure kernel parameters
  copy: src="etc/sysctl.d/{{ item }}" dest="/etc/sysctl.d/{{ item }}" mode=0644 owner=root group=root
  with_items:
    - 10-network-buffers.conf
    - 30-haproxy.conf
  notify:
    - Start procps
    - "Reload haproxy {{ _haproxy.instance_name }}"

- name: Add haproxy-ppa-1.8 repository
  apt_repository: repo="ppa:vbernat/haproxy-1.8" update_cache=yes

- name: Install HAProxy
  apt:
    state: present
    force: true
    pkg:
      - "haproxy={{ _haproxy.version }}"
      - "hatop"
      - "socat"
  notify:
    - "Reload haproxy {{ _haproxy.instance_name }}"
    - "Restart rsyslog"

- name: Create customized init.d script
  template: src="etc/init.d/haproxy.j2" dest="/etc/init.d/{{ _haproxy.instance_name }}" mode=0755 owner=root group=root

- name: Add group HAProxy as system group
  group: name=haproxy state=present system=yes

- name: Add user HAProxy as system user
  user: name=haproxy state=present shell=/bin/false group=haproxy comment="haproxy" system=yes createhome=no

- name: Install dependencies for haproxyctl
  apt:
    name:
      - "ruby"
      - "unzip"

- name: Pin haproxyctl version
  set_fact:
    haproxyctl_version: e8b30077ac0e050728981fc476b3349898b630be

- name: Download and unarchive haproxyctl zip
  unarchive: remote_src=yes src="https://github.com/CenterDevice/haproxyctl/archive/{{ haproxyctl_version }}.zip" dest=/opt
  register: haproxyctl_dir

- name: Rename created haproxyctl dir
  command: "mv {{ haproxyctl_dir.dest }}/haproxyctl-{{ haproxyctl_version }} {{ haproxyctl_dir.dest }}/haproxyctl"
  when: haproxyctl_dir is changed

- name: Link haproxyctl to /usr/local/sbin
  file: src=/opt/haproxyctl/bin/haproxyctl dest=/usr/local/sbin/haproxyctl state=link

- name: Create haproxy configuration directory
  file: path="/etc/{{ _haproxy.instance_name }}" state=directory owner=haproxy group=haproxy mode=0755

- block:
    - name: Create SSL certificate directory
      file: path="/etc/{{ _haproxy.instance_name }}/ssl" state=directory owner=haproxy group=haproxy mode=0755

    - name: Install SSL certificates and keys
      copy:
        content: "{{ item.value.data | b64decode }}"
        dest: "/etc/{{ _haproxy.instance_name }}/ssl/{{ item.value.filename }}"
        owner: haproxy
        group: haproxy
        mode: "0640"
      with_dict: "{{ _haproxy.ssl_certs|default({}) }}"
      notify:
        - "Reload haproxy {{ _haproxy.instance_name }}"

    - name: Inform external collector about our certificate location
      lineinfile: dest=/etc/cert_exp_time_globs owner=root group=root mode=0644 create=yes line="/etc/{{ _haproxy.instance_name }}/ssl/*"

  when: _haproxy.ssl_certs is defined

- name: Create HAProxy configuration file
  template:
    src: "etc/{{ _haproxy.instance_name }}/{{ _haproxy.instance_name }}.cfg.j2"
    dest: "/etc/{{ _haproxy.instance_name }}/{{ _haproxy.instance_name}}.cfg"
    owner: haproxy
    group: haproxy
    mode: "0640"
  notify:
    - "Reload haproxy {{ _haproxy.instance_name }}"
  when: _haproxy.use_default_config|default(no)

- name: Enable HAProxy for autostart
  service: name="{{ _haproxy.instance_name }}" enabled=yes

- meta: flush_handlers
